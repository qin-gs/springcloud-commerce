server:
  port: 9001
  servlet:
    context-path: /imooc

spring:
  application:
    name: commerce-gateway
  cloud:
    nacos:
      discovery:
        enabled: true # 如果不想使用 Nacos 进行服务注册和发现, 设置为 false 即可
        server-addr: 127.0.0.1:8848 # Nacos 服务器地址
        namespace: f5e0fd51-0f99-4c47-a173-ba46d3f269e4
        metadata:
          management:
            context-path: ${server.servlet.context-path}/actuator
    sentinel:
      eager: true
      transport:
        port: 8720
        dashboard: 127.0.0.1:7777
      # 使用 naocs 配置
      datasource:
        ds1:
          nacos:
            server-addr: ${spring.cloud.nacos.discovery.server-addr}
            namespace: ${spring.cloud.nacos.discovery.namespace}
            data-id: gateway-flow-rule-sentinel
            group-id: DEFAULT_GROUP
            data-type: json
            rule-type: gw-flow
        ds2:
          nacos:
            server-addr: ${spring.cloud.nacos.discovery.server-addr}
            namespace: ${spring.cloud.nacos.discovery.namespace}
            data-id: gateway-flow-rule-api-sentinel
            group-id: DEFAULT_GROUP
            data-type: json
            rule-type: gw-api-group

#      使用文件配置
#      datasource:
#        # 基于本地文件配置基于服务级别的配置
#        ds1.file:
#          file: classpath:gateway-flow-rule-sentinel.json
#          # 限流级别 (服务)
#          ruleType: gw-flow
#        # 配置对更细粒度的 api 的配置
#        ds2.file:
#          file: classpath:gateway-flow-rule-api-sentinel.json
#          # api 分组
#          ruleType: gw-api-group

    # 静态路由
  #    gateway:
  #      routes:
  #        - id: path_route
  #          uri: http://localhost:8080/user/{id}
  #          predicates:
  #            - Path=/user/{id}
  #          filters:
  #            - HeaderToken=
  kafka:
    bootstrap-servers: 127.0.0.1:9092
    producer:
      retries: 3
    consumer:
      auto-offset-reset: latest
  zipkin:
    sender:
      type: kafka # 默认是 web
    base-url: http://localhost:9411
  main:
    allow-bean-definition-overriding: true

# 这个地方独立配置, 是网关的数据, 代码 GatewayConfig.java 中读取被监听
nacos:
  gateway:
    route:
      config:
        data-id: commerce-gateway-router
        group: commerce

# 暴露端点
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
